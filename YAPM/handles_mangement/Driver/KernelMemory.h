/*

  KernelMemory.H

  Author: <your name>
  Last Updated: 2002-12-27

  This framework is generated by QuickSYS 0.2.2

*/

#ifndef _KERNELMEMORY_H
#define _KERNELMEMORY_H 1

//
// A structure representing the instance information associated with
// a particular device
//

typedef struct _DEVICE_EXTENSION
{
    ULONG  StateVariable;

} DEVICE_EXTENSION, *PDEVICE_EXTENSION;

//
// Define the various device type values.  Note that values used by Microsoft
// Corporation are in the range 0-0x7FFF(32767), and 0x8000(32768)-0xFFFF(65535)
// are reserved for use by customers.
//

#define FILE_DEVICE_KERNELMEMORY	0x8000

//
// Macro definition for defining IOCTL and FSCTL function control codes. Note
// that function codes 0-0x7FF(2047) are reserved for Microsoft Corporation,
// and 0x800(2048)-0xFFF(4095) are reserved for customers.
//

#define KERNELMEMORY_IOCTL_BASE	0x800

//
// The device driver IOCTLs
//

#define CTL_CODE_KERNELMEMORY(i) CTL_CODE(FILE_DEVICE_KERNELMEMORY, KERNELMEMORY_IOCTL_BASE+i, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_KERNELMEMORY_GETKERNELMEMORY	CTL_CODE_KERNELMEMORY(0)
#define IOCTL_KERNELMEMORY_GETOBJECTNAME	CTL_CODE_KERNELMEMORY(1)

#define LPVOID void*
#define LPCHAR char*

typedef struct tagSYSTEM_HANDLE_INFORMATION {
	ULONG ProcessID;
	UCHAR ObjectTypeNumber;
	UCHAR Flags;
	USHORT Handle;
	PVOID Object;
	ACCESS_MASK GrantedAccess;
} SYSTEM_HANDLE_INFORMATION, *PSYSTEM_HANDLE_INFORMATION;

typedef struct tagGetMemory {
	LPVOID lpPointer;
	ULONG dwSize;
} GETKERNELMEMORY,*LPGETKERNELMEMORY;

//
// Name that Win32 front end will use to open the KernelMemory device
//

#define KERNELMEMORY_DEVICE_NAME_WIN32	"\\\\.\\KernelMemory"

NTSTATUS
NTAPI
ZwOpenProcess (
    OUT PHANDLE             ProcessHandle,
    IN ACCESS_MASK          DesiredAccess,
    IN POBJECT_ATTRIBUTES   ObjectAttributes,
    IN PCLIENT_ID           ClientId OPTIONAL
);

NTSYSAPI VOID NTAPI ZwDuplicateObject(HANDLE,HANDLE,HANDLE,PHANDLE,unsigned long,unsigned long,unsigned long);

NTKERNELAPI
NTSTATUS
ObQueryNameString (
    IN PVOID                        Object,
    OUT POBJECT_NAME_INFORMATION    ObjectNameInfo,
    IN ULONG                        Length,
    OUT PULONG                      ReturnLength
);

#endif

