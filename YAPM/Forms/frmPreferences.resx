<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="IMG.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="IMG.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADu
        CgAAAk1TRnQBSQFMAgEBAgEAAQgBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBIAAwEBAgMIAQsDDwEVAxMBGgMTARoDEwEaAxMBGgMTARoDEwEaAxMBGgMT
        ARoDEwEaAw8BFQMIAQsDAQECxAADAgEDAw8BFQMcASkBJQIkATgBQgE7ATIBZQFyAVUBMQGeAYwBYAEo
        AbsBlwFiASMByQGMAWABKAG7AXIBVQExAZ4BQgE7ATIBZQElAiQBOAMdASoDDwEVAwIBAwQAAwcBCQMQ
        ARYDEwEaAxMBGgMTARoDEwEaAxMBGgMTARoDEwEaAxMBGgMTARoDEwEaAxMBGgMTARoDEAEWAwcBCYgA
        ARoBGQEYASIBeQFYATABpAGpAW8BLgHZAdYBlQFQAfAB6wGqAWkB+gH1AbMBdQH+AesBqgFpAfoB1gGV
        AVAB8AGnAW4BLQHZAXkBWAEwAaQBGgEZARgBIgwAAzUBZwM4AYUDOAGFAzgBhQM4AYUDOAGFAzgBhQM4
        AYUDOAGFAzgBhQM4AYUDOAGFAzgBhQM4AYUDOAGFAzUBZ4QAARsBGgEYASIBhAFaASsBugHDAYIBOQHr
        AfABqAFdAf8B8gGwAWoB/wHzAbQBcgH/AfMBtQF1Af8B8wG0AXIB/wHyAbABagH/AeQBnAFYAf8BzAGd
        AVYB6wGEAVwBLQG6ARsBGgEYASIIAAM9AXsD6wH/A+cB/wPnAf8D5wH/A+cB/wPnAf8D5wH/A+cB/wPn
        Af8D5wH/A+cB/wPnAf8D5wH/A+sB/wM9AXuAAAMHAQkBbwFQATABpAG7AXsBMQHrAecBmQFBAf8B6QGg
        AU0B/wHqAaYBWAH/AesBqgFfAf8B6wGrAWIB/wHrAaoBXwH/AeoBpgFYAf8B2gGRAUcC/wHGAW0B/wHJ
        AZIBSQHrAW8BUAEwAaQDBwEJBAADPwF2A+oB/wOsAf8DrAH/A6wB/wO/Af8DrAH/A78B/wOsAf8DyAH/
        A8cB/wPiAf8D4gH/A+IB/wPqAf8DPwF2gAABNgExASsBSQGRAV4BJwHaAdwBkQEyAf8B3AGRATEB/wHe
        AZUBOQH/Ad8BmQFBAf8B3wGcAUYB/wHgAZ0BRwH/Ad8BmwFFAf8B3AGXAUAB/wHPAYYBNAL/AbYBVQL/
        AbYBVQH/AZoBZwEuAdoBNgExASsBSQQAAz8BcwPtAf8D5gH/A+YB/wPmAf8D5gH/A+YB/wPUAf8D1AH/
        A9QB/wPdAf8D5gH/A+YB/wPmAf8D7QH/Az8Bc4AAAWABSgEzAZQBrgF0ATAB8AHSAYkBJQH/AdMBiwEn
        Af8B1AGOASsB/wHUAY8BLwH/AdUBkQExAf8B1QGRATEB/wHRAY0BLwH/AdwBkQE2Af8B0QGEAS4B/wHo
        AZkBOgL/AawBRgH/Ac8BjwFGAfABYAFKATMBlAQAA0ABcQPwAf8BCQFxAZQB/wEPAXcBmgH/AR8BrQHE
        Af8BGQGbAbcB/wPrAf8DsQH/A7EB/wPFAf8DsQH/A8UB/wPFAf8DuwH/A/AB/wNAAXGAAAFtAUsBKQG5
        AccBiAE8AfoByAGCASAB/wHMAYcBIwH/Ac4BigEkAf8BzgGKASYB/wHOAYoBJgH/Ac4BigEnAf8ByAGE
        ASQB/wHcAZABNQH/AfUBpQFFAf8BuQFuAR0C/wGtAUoB/wHjAaEBUQH6AW0BSwEpAbkEAANAAW4D8wH/
        AS4BRgFnAf8BLAGoAckB/wFTAeYB8wH/AT8B1wHuAf8D7wH/A9oB/wPaAf8D2gH/A9oB/wPaAf8D2gH/
        A9oB/wPzAf8DQAFugAABdAFLASMByQG7AX8BOAH+AeUBngFCAf8ByQGFASQB/wHNAYwBJwH/Ac4BjAEo
        Af8BzgGNASkB/wHLAYoBKAH/Ac4BigExAf8B1wGQAT0B/wH1Aa0BUwH/AbkBcwEcAf8B1AGNATEB/wHH
        AYsBPgH+AXQBSwEjAckEAANAAWwD9wH/ARYBsAHSAf8BFgGwAdIB/wEXAbIB0wH/ARcBsQHTAf8D9AH/
        A7YB/wO2Af8DtgH/A7YB/wPKAf8DygH/A8AB/wP3Af8DQAFsgAABcgFPASoBuAHiAbEBcAH6AdQBlQFA
        Af8BzQGPAS4B/wHUAZgBNwH/AdQBmwE6Af8B1QGcAT0B/wHPAZUBOwH/AeYBrQFdAf8B/QHFAXYB/wH1
        AbsBawH/Ac4BjwE9Af8BywGLAS8B/wHKAZYBSwH6AXIBTwEqAbgEAANAAWoD+gH/A/gB/wP4Af8D+AH/
        A/gB/wP4Af8D4QH/A+EB/wPtAf8D+AH/A/gB/wP4Af8D+AH/A/oB/wNAAWqAAAFkAU4BMwGSAcEBlgFe
        Ae8B1wGeAUcB/wHYAaABRAH/AdgBowFOAf8B3AGqAVYB/wHeAa0BXAH/Ad8BsAFoAf8B0gGgAVsB/wHJ
        AZMBTQH/AfoB0QGPAf8B7QG/AXkB/wHgAa0BYQH/AcEBlgFaAe8BZAFOATMBkgQAA0ABaAP9Af8DuwH/
        A88B/wO7Af8DuwH/A88B/wO7Af8D2QH/A9wB/wP8Af8D/AH/A/wB/wP8Af8D/QH/A0ABaIAAATcBMQEq
        AUcBngFyAToB1QHaAakBXgH/Ad8BsgFnAf8B9AHZAaEB/wHkAb4BggH/AeQBvQF8Af8B8wHYAacC/wHt
        Ab8B/wHcAbUBfQH/AfQB2QGjAv8B6AGuAf8B+wHjAawB/wGcAW8BNgHVATcBMQEqAUcEAANAAWc4/wNA
        AWeAAAMHAQkBeAFaATEBngHHAaIBbQLnAcMBiQH/AfgB5wG6Af8B/gHyAcwB/wHvAdQBpQH/AfIB2QGt
        Af8B+AHpAcMB/wH8AfABygL/AfUBygL/AfQBxgH/Ac4BsgGAAecBeAFaATEBngMHAQkEAANAAWkDuwH/
        A7oB/wO4Af8DtgH/A7MB/wOwAf8DrgH/A6sB/wOoAf8DpgH/A6MB/wOgAf8DngH/A5wB/wMzAWaEAAEa
        ARkBFwEgAY8BaQEzAbABywGkAWwB5gHvAdcBqwH/AfwB8gHMAf8B8QHVAaUB/wHvAc4BmwH/AfgB6gHG
        Av8B+gHXAv8B+QHXAf8B1AG4AYYB5gGPAWkBMwGwARoBGQEXASAIAAM7AVsDpwHUA9wB/wHYAtkB/wPV
        Af8B0ALRAf8DzAH/A8gB/wPGAf8BxgLFAf8ByQLFAf8BzQLGAf8B0QLHAf8B1wLLAf8BpQKdAdQDOwFb
        iAABGgEZARcBIAGBAWIBMwGZAbUBhwFEAc8B1wG2AYIB6wHqAc8BogH4AfEB2AGxAf4B9AHpAccB+AHg
        AcoBnAHrAbgBjgFNAc8BgQFiATMBmQEaARkBFwEgDAADGQEiAzoBWQNAAWYDQAFmA0ABZgNAAWYDQAFm
        A0ABZgNAAWYDQAFmA0ABZgNAAWYDQAFmA0ABZgM6AVkDGQEijAADBgEIATkBMwEpAUQBdwFdATUBigGX
        AW4BLwGsAaUBdAEqAbsBlwFuAS8BrAF3AV0BNQGKATkBMwEpAUQDBgEI0AABQgFNAT4HAAE+AwABKAMA
        AUADAAEQAwABAQEAAQEFAAGAFwAD/wIAAQEC/wUAAQEGAAHAAQcGAAGAAQMHAAEBBwABAQcAAQEHAAEB
        BwABAQcAAQEHAAEBBwABAQcAAQEGAAGAAQMGAAHAAQcGAAHgAQ8C/wQACw==
</value>
  </data>
</root>