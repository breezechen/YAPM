<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhKgAqAPcAAAAAACAgICMjIyQiIyYlIyQkJCUlJSYmJicnJygmJygoKCkoKSoqKisrKywqKy0s
        KiwsLC0tLS4uLi8vLzAwMDMxMjIyMjMzMzQ0NDU1NTc1Njc2NDc3Nzg3NTg4ODs7Oz8+PD4+PkFAPkJB
        P0FBQUJCQkNDQ0REREVERUZGRkdHR0hISEtLS09PT1BPTVFRUVNTU1RUVFZWVlhXVV5eXl9fX2JgYWJi
        YmNjY2RkZGVlZWZmZmhoaGlpaWtqaGpqam1tbW9vb3FwcXJycnNzc3V1dXd3d3h3dXt7e3x8fH5+foCA
        gIGBgYKCgoODg4SEhIWFhYaGhoeHh4iIiImJiYqKiouLi4yMjI2NjY6Ojo+Pj5CQkJGRkZSUlJWVlZaW
        lpeXl5iYmJmZmZuamJqampycnJ2dnZ6enqGhoaKioqOjo6SkpKWlpaampqenp6ioqKmpqaurq6ysrK2t
        ra6urq+vr7Cur7GwsbKysrOzs7S0tLW1tba2tre3t7i4uLm5ubq6uru7u7y8vL6+vr+/v8DAwMHBwcLC
        wsPDw8TExMbGxsfHx8jIyMnJycrKysvLy8zMzM3Nzc7Ozs/Pz9DQ0NHR0dLS0tPT09TU1NXV1dbW1tfX
        19XW2NjY2NnZ2dra2tvb29na3Nrb3dvc3t7d29zc3N3d3d7e3t/f393e4ODg4OHh4eLi4uPj4+Tk5OXl
        5ebm5ufn5+jm5+jo6Onp6erq6uvr6+zs7O3t7e7u7u/v7/Dw8PHx8fLy8vPz8/X19fb29gAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH5BAEAAP8ALAAAAAAqACoAAAj/AP8JHEiwoMGDCBMqRKiJz5clRpBYiXOJ18KLBmXdEYJCQwIBAQQY
        WOABCCCMKO3YqDBggYMFETiEOJHig4QJSGqhTAjrSAcCD4JumFGky51ChgbFifKCCKudBh3FODAhgoIP
        OsowakUrly6vX1Gt6QOV4KATBS4IoFDDjKWutG7lwoXLa65cwEpBKvvvLAKrJJYcgnUrVq26c3Pt+qoL
        l65DJ3deWhEgggQVYTbNovVqVi65Xnn14qXrVy1eqMh02rljAQUIJcx8qtUK1ixctWzh2iW6l29dvnLB
        auMGpRgFEBCUIGOKlqrOrRzX5c2Ll6/ruXrZwqPF1MVSKBZI//DApBMqVq1ixbrdVTFv375G4/L150mg
        i1oOSIjQo9EqVc+1wlUtt9Cli3Xx+cbbLnwwwcZCpLDQAAMpyKGKKKis0sorttlyi1zv+TbaLrvY4gcT
        YCw0BgUMYKDEJKWMgooqrbhiG4EF6kIidbzMBcsbVKSokA8KMHACHaZ0ksopqrDiyiux0GKLh4jpomNj
        upziRRVkLOQCBBH84EgnpYhySoYb3jhlgXTd1aYjV0wBx0IiNJCBF51kUkoopjDppG205MYmLh/KBYsc
        VVyhCJ0LmDCHJ5poMooppqDJ4XpSfjjllLpk0gUUYTylEAgIwCCIJ3mGAkopfj4JCyyY0v8ia26s5GEF
        FHdcNAIDNByiCSaecAIKKJVq+OQrl6632S2TZEHFFZFc1AICNyiSySWbaALKJ5/0maErq8DyZCxQ0lLK
        GVVMoQZGQhSAAyKWZGIJJpp08kkppfSpyiqsrPLkk6vIYcWzk2D0BwYvEGJJJJdkkskmnXhCLCqotILK
        K66cMgsqeUxRBRV/7ESEBWx8Egkm2EYqcb6mlKLKma6AsscVV0iBhi47baKCE5FMMkklmdDrySeerJzh
        KpbMgUUVUJhxSllw8NDHJZJUYknDm2T9yYygdIIIGjVTwVxZtMABBRmIUPLIz5dcQm/WmjxChxZSTIFF
        GaqUtcoXz17REYYekkBCiSWVtA3JIXB0MQUVz+KRS1mabHkFFVpMoYUYbtSxRx5zrAFGnB5fkQYmfFmi
        RRVWYKGFFVpUkggYWUhRdxRQSLHFFm5Uwtc/jjzLuhVXVGGJQLdc4kccbbAxRx+LrLL7P39gYTcW1DsR
        skG1xGLR87TEcYUViSY6xRvPX/RFEx9rccUWUogRS/kL5fCEFtJbIYUV0cKvkAxN0JwFFlLwg/4WIgQY
        VIEL3yPD4waYkEnAoAVDSEISdMdAhSwiCDDQgR4qyMEOehAhAQEAOw==
</value>
  </data>
</root>